// FILE: src/components/messages/AgentLog.jsx
// Purpose: Displays a single log entry generated by an agent. This component
//          is specifically designed to present agent-related activities or
//          responses, including their name, timestamp, and the log message content,
//          along with an optional status.

import React from 'react';
import styles from './AgentLog.module.css'; // Imports CSS module for styling agent log entries
import { formatTime } from '../../utils/formatUtils'; // Utility function to format timestamps

/**
 * AgentLog component renders an individual log message originating from an agent.
 * It provides a structured display for agent actions or communications,
 * differentiating them visually from system logs or user messages.
 *
 * @param {object} props - The component's properties.
 * @param {object} props.message - The message object containing log details.
 * @param {string} props.message.body - The main content of the log message (preferred).
 * @param {string} props.message.content - Fallback for the main content if `body` is not available.
 * @param {string} props.message.createdAt - The timestamp when the log message was created.
 * @param {string} [props.message.status] - Optional status of the agent's log entry (e.g., 'thinking', 'completed').
 * @param {string} props.sender - The display name of the agent who sent the log.
 * @returns {JSX.Element} A div element representing a formatted agent log entry.
 */
const AgentLog = ({ message, sender }) => {
  // Determine the content to display, prioritizing `message.body` over `message.content`.
  const content = message.body || message.content;
  // Format the `createdAt` timestamp into a human-readable time string.
  const time = formatTime(message.createdAt);

  return (
    <div className={styles.agent}>
      {/* Header section of the agent log, displaying sender name and timestamp */}
      <div className={styles.header}>
        {/* Displays the agent's name */}
        <span className={styles.name}>{sender}</span>
        {/* Displays the formatted time of the log entry */}
        <span className={styles.time}>{time}</span>
      </div>
      {/* Body section of the agent log, displaying the main content and status */}
      <div className={styles.body}>
        {content}{' '}
        {/* Displays the log message content */}
        {/* Conditionally renders the status tag only if message.status exists */}
        {message.status && <span className={styles.status}>[{message.status}]</span>}
      </div>
    </div>
  );
};

export default AgentLog;